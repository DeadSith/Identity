@using System.Text
@model IRepoView

@{
    var currentBranch = "HEAD";
}

@if (Model.CurrentBranchIndex < 0 || Model.CurrentBranchIndex >= Model.Branches.Count)
{
    Model.CurrentBranchIndex = 0;
}
else
{
    currentBranch = $"{Model.Branches[Model.CurrentBranchIndex]}";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="@Model.RepoRootPath/@currentBranch">Root</a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            @if (Model.Branches.Count > 1)
            {
                <li class="dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@currentBranch <span class="caret"></span></a>
                  <ul class="dropdown-menu">
                    @foreach (var branch in Model.Branches)
                    {
                        <li><a href="@Model.RepoRootPath/@branch/">@branch</a></li>
                    }
                  </ul>
                </li>
            }
            @for (var i = 2; i < Model.Path.Count; i++)
            {
                var path = new StringBuilder($"{Model.RepoRootPath}/{currentBranch}/");
                for (var j = 2; j <= i; j++)
                {
                    path.Append(Model.Path[j] + "/");
                }
                path.Remove(path.Length - 1, 1);
                <li>
                  <a href="@path.ToString()">
                    @Model.Path[i]
                  </a>
                </li>
            }
          </ul>
            <ul class="nav navbar-nav navbar-right">
                @{
                    var repoPath = new StringBuilder($"{Model.RepoRootPath}/{currentBranch}/");
                    for (var j = 2; j < Model.Path.Count; j++)
                    {
                        repoPath.Append(Model.Path[j] + "/");
                    }
                    repoPath.Remove(repoPath.Length - 1, 1);
                }
                @if (ViewBag.IsFolderViewActive == true)
                {
                    <li class="active"><a href="@repoPath">Files <span class="sr-only">(current)</span></a></li>
                }
                else
                {
                    <li><a href="@repoPath">Files</a></li>
                }
                @{
                    var infoPath = "/Info"+repoPath.ToString();
                }
                @if (ViewBag.IsInfoActive == true)
                {
                    <li class="active"><a href="@infoPath">Info<span class="sr-only">(current)</span></a></li>
                }
                else
                {
                    <li><a href="@infoPath">Info</a></li>
                }
                @if (ViewBag.IsHitoryActive == true)
                {
                    <li class="active"><a href="@Model.RepoRootPath/@currentBranch/History">History<span class="sr-only">(current)</span></a></li>
                }
                else
                {
                    <li><a href="@Model.RepoRootPath/@currentBranch/History">History</a></li>
                }
            </ul>
        </div>
    </div>
</nav>