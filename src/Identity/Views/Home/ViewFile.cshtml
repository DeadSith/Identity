@using System.Text
@using System.Threading.Tasks
@model ViewFileViewModel
@{
    ViewData["Title"] = Model.FileName;
}

<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="@Model.RepoRootPath/@Model.Branches[Model.CurrentBranchIndex]">Root</a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @for (var i = 2; i < Model.Path.Count; i++)
                {
                    var path = new StringBuilder($"{Model.RepoRootPath}/{Model.Branches[Model.CurrentBranchIndex]}/");
                    for (var j = 2; j <= i; j++)
                    {
                        path.Append(Model.Path[j] + "/");
                    }
                    path.Remove(path.Length - 1, 1);
                    <li>
                        <a href="@path.ToString()">
                            @Model.Path[i]
                        </a>
                    </li>
                }
            </ul>
            <ul class="nav navbar-nav navbar-right">
                @{
                    var repoPath = new StringBuilder($"{Model.RepoRootPath}/{Model.Branches[Model.CurrentBranchIndex]}/");
                    for (var j = 2; j < Model.Path.Count; j++)
                    {
                        repoPath.Append(Model.Path[j] + "/");
                    }
                    repoPath.Remove(repoPath.Length - 1, 1);
                }
                <li class="active"><a href="@repoPath">Files <span class="sr-only">(current)</span></a></li>
                @{
                    var infoPath = "/Info" + repoPath.ToString();
                }
                <li><a href="@infoPath">Info</a></li>
            </ul>
        </div>
    </div>
</nav>

<h1>@Model.FileName:</h1>
<code class="prettyprint">
    @foreach(var line in Model.FileContent)
    {
        @line
        <br />
    }
</code>