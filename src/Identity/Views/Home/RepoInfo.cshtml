@using System.Linq
@model RepoInfoViewModel

@{
    ViewData["Title"] = "Info";
}

@await Component.InvokeAsync("RepoBar", new {repoView = (IRepoView)Model, activePage = "Info"})

<br /><br />
<table class="table table-hover">
  <tr>
    <td>
      Clone uri:
    </td>
    <td>
      @Model.RepoUri
    </td>
  </tr>
  <tr>
    <td>
      Number of branches
    </td>
    <td>
      @Model.Branches.Count
    </td>
  </tr>
  <tr>
    <td>
      Other info
    </td>
    <td>
      Will go here
    </td>
  </tr>
</table>
@if (Model.CurrentCommit != null)
{
    <h4>
      Latest commit information:
    </h4>
    <table class="table table-hover">
      <tr>
        <td>
          Hash
        </td>
        <td>
          @Model.CurrentCommit.Hash
        </td>
      </tr>
      <tr>
        <td>
          Author
        </td>
        <td>
          @Model.CurrentCommit.Author
        </td>
      </tr>
      <tr>
        <td>
          Commited on
        </td>
        <td>
          @Model.CurrentCommit.CommitTime
        </td>
      </tr>
      <tr>
        <td>
          Description
        </td>
        <td>
          @Model.CurrentCommit.Description
        </td>
      </tr>
    </table>
if (Model.CurrentCommit.Changes.Any())
 {
     <h4>
       File changes:
     </h4>
     <table class="table table-hover">
       @foreach (var pair in Model.CurrentCommit.Changes)
       {
           <tr>
             <td>
               @pair.Key
             </td>
             <td>
               <span style="color: green">@pair.Value.Item1 additions</span>, <span style="color: red">@pair.Value.Item2 deletions</span>
             </td>
           </tr>
       }
     </table>
 }
}